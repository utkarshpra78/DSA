//https://leetcode.com/problems/bus-routes/description/
class Solution {
public:
    int numBusesToDestination(vector<vector<int>>& routes, int source, int target) {
        int n=routes.size();
        if(source==target)return 0;
        map<int,vector<int>>mpp;
        for(int i=0;i<n;i++){
            for(auto it:routes[i]){
                mpp[it].push_back(i);
            }
        }
        queue<pair<int,int>>q;
        vector<int>vis(1e5,0); 
        for(auto it:mpp[source]){ 
            q.push({it,1});
            vis[it]=1;
        }
        
        while(!q.empty()){
            int node=q.front().first;
            int bus=q.front().second;
            q.pop();
            for(auto it:routes[node]){
                if(it==target){
                    return bus;
                }
                for(auto itt:mpp[it]){
                    if(!vis[itt]){
                        vis[itt]=1;
                        q.push({itt,bus+1});
                    }
                }
            }
        }
        return -1;
    }
};
