//https://leetcode.com/problems/path-sum/description/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool f(TreeNode* root, int &targetSum,int sum){
        if(root==NULL){
            return 0;
        }
        if(root->left==NULL && root->right==NULL){ 
            if(sum+root->val==targetSum){
                return true;
            }else{
                return false;
            }
        }
        bool a=0,b=0;
        if(root->left){
            a=f(root->left,targetSum,sum+root->val);
        }
        if(root->right){
            b=f(root->right,targetSum,sum+root->val);
        }
        return a|b; 
    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        return f(root,targetSum,0);
    }
};
