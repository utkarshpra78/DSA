//https://leetcode.com/problems/k-radius-subarray-averages/description/
class Solution {
public:
    vector<int> getAverages(vector<int>& nums, int k) {
        int n=nums.size();
        int m=2*k+1;
        vector<int>ans(n,-1);
        if(n<m){
            return ans;
        }
        long long sum=0;
        int j=k;
        for(int i=0;i<m;i++){
            sum+=nums[i];
        }
        ans[j]=sum/m;
        j++;
        for(int i=m;i<n;i++){
            sum-=(nums[i-m]);
            sum+=nums[i];
            ans[j]=sum/m;
            j++; 
        }
        return ans;
    }
};
