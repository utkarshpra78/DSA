//https://leetcode.com/problems/house-robber-ii/description/

//213. House Robber II

class Solution {
public:
    int ck(vector<int>v){
        int n=v.size();
        vector<vector<int>>u(n,vector<int>(2));
        u[0][0]=v[0];
        u[0][1]=0;
        for(int i=1;i<n;i++){
            u[i][1]=max(u[i-1][0],u[i-1][1]);
            u[i][0]=u[i-1][1]+v[i];
        }
        return max(u[n-1][0],u[n-1][1]);
    }
    int rob(vector<int>& nums) {
        int n=nums.size();
        if(n==1){
            return nums[0];
        }
        vector<int>x;
        for(int i=1;i<n;i++){
            x.push_back(nums[i]);
        }
        nums.pop_back();
        return max(ck(x),ck(nums));
    }
};
