//https://leetcode.com/problems/longest-common-subsequence/description/

//1143. Longest Common Subsequence

class Solution {
public:
    int dp[1005][1005];
    int f(int i,int j,string &a,string &b){
        if(i==a.size() || j==b.size()){
            return 0;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        int c=0;
        if(a[i]==b[j]){
            c+=(1+f(i+1,j+1,a,b));
        }
        else{
            c+=max(f(i+1,j,a,b),f(i,j+1,a,b));
        }
        return dp[i][j]=c;
    }
    int longestCommonSubsequence(string text1, string text2) {
        memset(dp,-1,sizeof(dp));
        return f(0,0,text1,text2);
    }
};


__________________________________________________________________________________________________________


class Solution {
public:
    int dp[1005][1005];
 
    int longestCommonSubsequence(string text1, string text2) {
        memset(dp,0,sizeof(dp));
        int n=text1.size();
        int m=text2.size();
        for(int i=1;i<n+1;i++){
            for(int j=1;j<m+1;j++){
                if(text1[i-1]==text2[j-1]){
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else{
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        return dp[n][m];
    }
};
