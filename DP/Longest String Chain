//https://leetcode.com/problems/longest-string-chain/description/

//1048. Longest String Chain

class Solution {
public:
    static bool cmp(string &a,string &b){   
        return a.size()<b.size();
    }
    bool issubstring(string a,string b){
        int n=a.size();
        int m=b.size();
        int j=0;
        for(int i=0;i<n;i++){
            if(a[i]==b[j]){
                j++;
                if(j==m){
                    return true;
                }
            }
        }
        return false;
    }

    int longestStrChain(vector<string>& words) {
        int n=words.size();
        sort(words.begin(),words.end(),cmp);
        vector<int>dp(n,1);
        for(int i=0;i<n;i++){
            for(int j=i-1;j>=0;j--){
                if(issubstring(words[i],words[j]) && words[i].size()-1==words[j].size()){
                    dp[i]=max(dp[i],dp[j]+1);
                }
            }
        }
        return *max_element(dp.begin(),dp.end());
    }
};
